// Code generated by "stringer -output stringer.go -linecomment -type=tokCh,Kind"; DO NOT EDIT.

package cc

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ADDASSIGN-57345]
	_ = x[ALIGNAS-57346]
	_ = x[ALIGNOF-57347]
	_ = x[ANDAND-57348]
	_ = x[ANDASSIGN-57349]
	_ = x[ARROW-57350]
	_ = x[ASM-57351]
	_ = x[ATOMIC-57352]
	_ = x[ATTRIBUTE-57353]
	_ = x[AUTO-57354]
	_ = x[BOOL-57355]
	_ = x[BREAK-57356]
	_ = x[CASE-57357]
	_ = x[CHAR-57358]
	_ = x[CHARCONST-57359]
	_ = x[COMPLEX-57360]
	_ = x[CONST-57361]
	_ = x[CONTINUE-57362]
	_ = x[DDD-57363]
	_ = x[DEC-57364]
	_ = x[DECIMAL64-57365]
	_ = x[DECLSPEC-57366]
	_ = x[DEFAULT-57367]
	_ = x[DIVASSIGN-57368]
	_ = x[DO-57369]
	_ = x[DOUBLE-57370]
	_ = x[ELSE-57371]
	_ = x[ENUM-57372]
	_ = x[EQ-57373]
	_ = x[EXTERN-57374]
	_ = x[FLOAT-57375]
	_ = x[FLOAT128-57376]
	_ = x[FLOAT128X-57377]
	_ = x[FLOAT16-57378]
	_ = x[FLOAT32-57379]
	_ = x[FLOAT32X-57380]
	_ = x[FLOAT64-57381]
	_ = x[FLOAT64X-57382]
	_ = x[FLOATCONST-57383]
	_ = x[FOR-57384]
	_ = x[GENERIC-57385]
	_ = x[GEQ-57386]
	_ = x[GOTO-57387]
	_ = x[HEADER_NAME-57388]
	_ = x[IDENTIFIER-57389]
	_ = x[IF-57390]
	_ = x[IMAG-57391]
	_ = x[IMAGINARY-57392]
	_ = x[INC-57393]
	_ = x[INLINE-57394]
	_ = x[INT-57395]
	_ = x[INT128-57396]
	_ = x[INTCONST-57397]
	_ = x[LABEL-57398]
	_ = x[LEQ-57399]
	_ = x[LONG-57400]
	_ = x[LONGCHARCONST-57401]
	_ = x[LONGSTRINGLITERAL-57402]
	_ = x[LSH-57403]
	_ = x[LSHASSIGN-57404]
	_ = x[MODASSIGN-57405]
	_ = x[MULASSIGN-57406]
	_ = x[NEQ-57407]
	_ = x[NONNULL-57408]
	_ = x[NORETURN-57409]
	_ = x[ORASSIGN-57410]
	_ = x[OROR-57411]
	_ = x[PPNUMBER-57412]
	_ = x[PPPASTE-57413]
	_ = x[REAL-57414]
	_ = x[REGISTER-57415]
	_ = x[RESTRICT-57416]
	_ = x[RETURN-57417]
	_ = x[RSH-57418]
	_ = x[RSHASSIGN-57419]
	_ = x[SHORT-57420]
	_ = x[SIGNED-57421]
	_ = x[SIZEOF-57422]
	_ = x[STATIC-57423]
	_ = x[STRINGLITERAL-57424]
	_ = x[STRUCT-57425]
	_ = x[SUBASSIGN-57426]
	_ = x[SWITCH-57427]
	_ = x[THREADLOCAL-57428]
	_ = x[TYPEDEF-57429]
	_ = x[TYPENAME-57430]
	_ = x[TYPEOF-57431]
	_ = x[UINT128-57432]
	_ = x[UNION-57433]
	_ = x[UNSIGNED-57434]
	_ = x[VOID-57435]
	_ = x[VOLATILE-57436]
	_ = x[WHILE-57437]
	_ = x[XORASSIGN-57438]
}

const _tokCh_name = "'+=''_Alignas''_Alignof''&&''&=''->''asm''_Atomic''__attribute__''auto''_Bool''break''case''char'character constant'_Complex''const''continue''...''--''_Decimal64''__declspec''default''/=''do''double''else''enum''==''extern''float''_Float128''_Float128x''_Float16''_Float32''_Float32x''_Float64''_Float64x'floating point constant'for''_Generic''>=''goto'<header-name>identifier'if''__imag__''_Imaginary''++''inline''int''__int128'integer constant'__label__''<=''long'long character constantlong string literal'<<''<<=''%=''*=''!=''_Nonnull''_Noreturn''|=''||'preprocessing number'##''__real__''register''restrict''return''>>''>>=''short''signed''sizeof''static'string literal'struct''-=''switch''_Thread_local''typedef'type name'typeof''__uint128_t''union''unsigned''void''volatile''while''^='"

var _tokCh_index = [...]uint16{0, 4, 14, 24, 28, 32, 36, 41, 50, 65, 71, 78, 85, 91, 97, 115, 125, 132, 142, 147, 151, 163, 175, 184, 188, 192, 200, 206, 212, 216, 224, 231, 242, 254, 264, 274, 285, 295, 306, 329, 334, 344, 348, 354, 367, 377, 381, 391, 403, 407, 415, 420, 430, 446, 457, 461, 467, 490, 509, 513, 518, 522, 526, 530, 540, 551, 555, 559, 579, 583, 593, 603, 613, 621, 625, 630, 637, 645, 653, 661, 675, 683, 687, 695, 710, 719, 728, 736, 749, 756, 766, 772, 782, 789, 793}

func (i tokCh) String() string {
	i -= 57345
	if i < 0 || i >= tokCh(len(_tokCh_index)-1) {
		return "tokCh(" + strconv.FormatInt(int64(i+57345), 10) + ")"
	}
	return _tokCh_name[_tokCh_index[i]:_tokCh_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidKind-0]
	_ = x[Array-1]
	_ = x[Bool-2]
	_ = x[Char-3]
	_ = x[ComplexChar-4]
	_ = x[ComplexDouble-5]
	_ = x[ComplexFloat-6]
	_ = x[ComplexInt-7]
	_ = x[ComplexLong-8]
	_ = x[ComplexLongDouble-9]
	_ = x[ComplexLongLong-10]
	_ = x[ComplexShort-11]
	_ = x[ComplexUInt-12]
	_ = x[ComplexUShort-13]
	_ = x[Decimal64-14]
	_ = x[Double-15]
	_ = x[Enum-16]
	_ = x[Float-17]
	_ = x[Float128-18]
	_ = x[Float32-19]
	_ = x[Float32x-20]
	_ = x[Float64-21]
	_ = x[Float64x-22]
	_ = x[Function-23]
	_ = x[Int-24]
	_ = x[Int128-25]
	_ = x[Long-26]
	_ = x[LongDouble-27]
	_ = x[LongLong-28]
	_ = x[Ptr-29]
	_ = x[SChar-30]
	_ = x[Short-31]
	_ = x[Struct-32]
	_ = x[UChar-33]
	_ = x[UInt-34]
	_ = x[UInt128-35]
	_ = x[ULong-36]
	_ = x[ULongLong-37]
	_ = x[UShort-38]
	_ = x[Union-39]
	_ = x[Void-40]
	_ = x[maxKind-41]
}

const _Kind_name = "InvalidKindarray_Boolchar_Complex char_Complex double_Complex float_Complex int_Complex long_Complex long double_Complex long long_Complex short_Complex unsigned_Complex unsigned short_Decimal64doubleenumfloat_Float128_Float32_Float32x_Float64_Float64xfunctionint__int128longlong doublelong longpointersigned charshortstructunsigned charunsignedunsigned __int128unsigned longunsigned long longunsigned shortunionvoidmaxKind"

var _Kind_index = [...]uint16{0, 11, 16, 21, 25, 38, 53, 67, 79, 92, 112, 130, 144, 161, 184, 194, 200, 204, 209, 218, 226, 235, 243, 252, 260, 263, 271, 275, 286, 295, 302, 313, 318, 324, 337, 345, 362, 375, 393, 407, 412, 416, 423}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
